---
interface Props {
  topic?: string;
}

const { topic } = Astro.props;
---

<div class="relative max-w-2xl mx-auto">
  <form id="search-form" class="flex rounded-lg overflow-hidden shadow-md">
    <input
      type="search"
      id="search-input"
      name="q"
      placeholder={`Search ${topic ? topic : 'all articles'}...`}
      class="flex-grow px-6 py-4 border-0 outline-none focus:ring-2 focus:ring-secondary-500 dark:bg-gray-800 dark:text-white transition-all duration-200"
    />
    <button
      type="submit"
      class="px-6 py-4 bg-primary-500 text-white hover:bg-primary-600 transition-colors duration-200"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
      </svg>
    </button>
  </form>
</div>

<script define:vars={{ topic }}>
// This is a placeholder for search functionality
// In a real implementation, you would handle the search here or redirect to a search page
document.getElementById('search-form').addEventListener('submit', (e) => {
  e.preventDefault();
  const searchInput = document.getElementById('search-input');
  const searchTerm = searchInput.value.trim();
  
  if (searchTerm) {
    const searchParams = new URLSearchParams();
    searchParams.set('q', searchTerm);
    if (topic) {
      searchParams.set('topic', topic);
    }
    window.location.href = `/search?${searchParams.toString()}`;
  }
});
</script>